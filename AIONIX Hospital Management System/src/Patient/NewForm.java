/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Patient;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.Date;
import java.sql.Time;
import javax.swing.JOptionPane;
//import ;

/**
 *
 * @author HP_Owner
 */
public class NewForm extends javax.swing.JFrame {
String name,address,relative,consultant,problem,dod,time2,poa,deoa,allergi,occup,consultemp1,consultemp2;
String habit="",sex="",relation="";
Date doa;
Time time1;
long phone;
int age,room,id,bed1,bed2,bed3,bed4;
int z=0;
int aa=0;
int bb=0;
int cc=0;
int dd=0;

    /**
     * Creates new form CreateForm
     */
    public NewForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        page = new javax.swing.JTextField();
        paddress = new javax.swing.JTextField();
        pname = new javax.swing.JTextField();
        pphone = new javax.swing.JTextField();
        ppoa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        pproblem = new javax.swing.JTextArea();
        pdod = new javax.swing.JTextField();
        pdoa = new javax.swing.JTextField();
        ptime1 = new javax.swing.JTextField();
        ptime2 = new javax.swing.JTextField();
        prelative = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        pdeoa = new javax.swing.JTextArea();
        pallergi = new javax.swing.JTextField();
        poccup = new javax.swing.JTextField();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        r3 = new javax.swing.JRadioButton();
        proom = new javax.swing.JComboBox();
        ch1 = new javax.swing.JCheckBox();
        ch2 = new javax.swing.JCheckBox();
        ch3 = new javax.swing.JCheckBox();
        b1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        psex1 = new javax.swing.JRadioButton();
        psex2 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        pconsultant = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 120, 53, 22);

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Age");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(80, 170, 34, 30);

        jLabel3.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Sex");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(850, 180, 30, 22);

        jLabel5.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Address");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(60, 240, 71, 22);

        jLabel6.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Place of Accident");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 540, 152, 22);

        jLabel7.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Phone No.");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(820, 240, 89, 22);

        jLabel8.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Consultant");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(50, 300, 95, 22);

        jLabel9.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Room No.");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(820, 60, 86, 22);

        jLabel10.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Problem");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(820, 300, 75, 22);

        jLabel11.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Date of Admission");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(20, 420, 160, 22);

        jLabel12.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Time");
        jLabel12.setToolTipText("Time of Departure");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(840, 480, 46, 22);

        jLabel13.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Date of Departure");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(30, 480, 156, 22);

        jLabel14.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Time");
        jLabel14.setToolTipText("Time of Admission");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(840, 420, 46, 22);

        jLabel15.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Details of Accident");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(780, 540, 165, 22);

        jLabel16.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Occupation");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(50, 600, 101, 22);

        jLabel17.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Allergies");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(830, 660, 79, 22);

        jLabel18.setFont(new java.awt.Font("Rockwell", 1, 18));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Habit");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(70, 660, 48, 22);

        page.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        page.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        page.setMinimumSize(new java.awt.Dimension(150, 20));
        page.setPreferredSize(new java.awt.Dimension(150, 20));
        page.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pageKeyReleased(evt);
            }
        });
        getContentPane().add(page);
        page.setBounds(220, 170, 260, 40);

        paddress.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        paddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        paddress.setMinimumSize(new java.awt.Dimension(150, 20));
        paddress.setPreferredSize(new java.awt.Dimension(150, 20));
        getContentPane().add(paddress);
        paddress.setBounds(220, 230, 260, 40);

        pname.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        pname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pname.setMinimumSize(new java.awt.Dimension(150, 20));
        pname.setPreferredSize(new java.awt.Dimension(15, 20));
        getContentPane().add(pname);
        pname.setBounds(220, 110, 260, 40);

        pphone.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        pphone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pphone.setMinimumSize(new java.awt.Dimension(150, 20));
        pphone.setPreferredSize(new java.awt.Dimension(150, 20));
        pphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pphoneKeyReleased(evt);
            }
        });
        getContentPane().add(pphone);
        pphone.setBounds(1020, 230, 260, 40);

        ppoa.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        ppoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ppoa.setMinimumSize(new java.awt.Dimension(150, 20));
        ppoa.setPreferredSize(new java.awt.Dimension(15, 20));
        getContentPane().add(ppoa);
        ppoa.setBounds(220, 530, 260, 40);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pproblem.setColumns(20);
        pproblem.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        pproblem.setLineWrap(true);
        pproblem.setRows(5);
        pproblem.setWrapStyleWord(true);
        pproblem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(pproblem);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(1020, 280, 260, 120);

        pdod.setEditable(false);
        pdod.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        pdod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pdod.setEnabled(false);
        getContentPane().add(pdod);
        pdod.setBounds(220, 470, 260, 40);

        pdoa.setEditable(false);
        pdoa.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        pdoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pdoa.setEnabled(false);
        getContentPane().add(pdoa);
        pdoa.setBounds(220, 410, 260, 40);

        ptime1.setEditable(false);
        ptime1.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        ptime1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ptime1.setEnabled(false);
        getContentPane().add(ptime1);
        ptime1.setBounds(1020, 410, 260, 40);

        ptime2.setEditable(false);
        ptime2.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        ptime2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ptime2.setEnabled(false);
        getContentPane().add(ptime2);
        ptime2.setBounds(1020, 470, 260, 40);

        prelative.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        prelative.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        prelative.setMinimumSize(new java.awt.Dimension(150, 20));
        prelative.setPreferredSize(new java.awt.Dimension(15, 20));
        getContentPane().add(prelative);
        prelative.setBounds(1020, 110, 260, 40);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pdeoa.setColumns(20);
        pdeoa.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        pdeoa.setLineWrap(true);
        pdeoa.setRows(5);
        pdeoa.setWrapStyleWord(true);
        pdeoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane2.setViewportView(pdeoa);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(1020, 520, 260, 120);

        pallergi.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        pallergi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pallergi.setMinimumSize(new java.awt.Dimension(150, 20));
        pallergi.setPreferredSize(new java.awt.Dimension(15, 20));
        getContentPane().add(pallergi);
        pallergi.setBounds(1020, 650, 260, 40);

        poccup.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        poccup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        poccup.setMinimumSize(new java.awt.Dimension(150, 20));
        poccup.setPreferredSize(new java.awt.Dimension(15, 20));
        getContentPane().add(poccup);
        poccup.setBounds(220, 590, 260, 40);

        buttonGroup1.add(r1);
        r1.setFont(new java.awt.Font("Rockwell", 1, 18));
        r1.setText("S/o");
        r1.setToolTipText("Son of");
        r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1ActionPerformed(evt);
            }
        });
        getContentPane().add(r1);
        r1.setBounds(750, 110, 55, 31);

        buttonGroup1.add(r2);
        r2.setFont(new java.awt.Font("Rockwell", 1, 18));
        r2.setText("D/o");
        r2.setToolTipText("Daughter of");
        r2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2ActionPerformed(evt);
            }
        });
        getContentPane().add(r2);
        r2.setBounds(830, 110, 59, 31);

        buttonGroup1.add(r3);
        r3.setFont(new java.awt.Font("Rockwell", 1, 18));
        r3.setText("W/o");
        r3.setToolTipText("Wife of");
        r3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3ActionPerformed(evt);
            }
        });
        getContentPane().add(r3);
        r3.setBounds(910, 110, 63, 31);

        proom.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        proom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(proom);
        proom.setBounds(1020, 50, 260, 40);

        ch1.setText("Alcohol");
        ch1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(ch1);
        ch1.setBounds(220, 660, 90, 17);

        ch2.setText("Smoking");
        ch2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(ch2);
        ch2.setBounds(320, 660, 100, 17);

        ch3.setText("Tabacco Chewing");
        ch3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(ch3);
        ch3.setBounds(440, 660, 150, 17);

        b1.setFont(new java.awt.Font("Rockwell", 0, 18));
        b1.setForeground(new java.awt.Color(255, 0, 0));
        b1.setText("SUBMIT");
        b1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });
        getContentPane().add(b1);
        b1.setBounds(600, 660, 160, 70);

        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("*");
        jLabel4.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(910, 60, 6, 14);

        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("*");
        jLabel19.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(120, 170, 6, 14);

        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("*");
        jLabel20.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(160, 600, 6, 14);

        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("*");
        jLabel21.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(980, 110, 6, 14);

        buttonGroup2.add(psex1);
        psex1.setText("Male");
        psex1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        psex1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psex1ActionPerformed(evt);
            }
        });
        getContentPane().add(psex1);
        psex1.setBounds(1030, 180, 80, 17);

        buttonGroup2.add(psex2);
        psex2.setText("Female");
        psex2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        psex2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psex2ActionPerformed(evt);
            }
        });
        getContentPane().add(psex2);
        psex2.setBounds(1170, 180, 90, 17);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/logo.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(0, 0, 140, 110);

        pconsultant.setFont(new java.awt.Font("FrankRuehl", 0, 16));
        pconsultant.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "            --------Select--------" }));
        pconsultant.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(pconsultant);
        pconsultant.setBounds(220, 290, 260, 40);

        jLabel22.setFont(new java.awt.Font("Rockwell", 2, 30));
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jLabel22.setText("Add Patient");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(540, 10, 190, 40);

        jLabel23.setForeground(new java.awt.Color(255, 0, 0));
        jLabel23.setText("*");
        jLabel23.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel23);
        jLabel23.setBounds(140, 240, 6, 14);

        jLabel24.setForeground(new java.awt.Color(255, 0, 0));
        jLabel24.setText("*");
        jLabel24.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(150, 300, 6, 14);

        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("*");
        jLabel25.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(130, 120, 6, 14);

        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("*");
        jLabel26.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel26);
        jLabel26.setBounds(890, 180, 6, 14);

        jLabel27.setForeground(new java.awt.Color(255, 0, 0));
        jLabel27.setText("*");
        jLabel27.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel27);
        jLabel27.setBounds(910, 240, 6, 14);

        jLabel28.setForeground(new java.awt.Color(255, 0, 0));
        jLabel28.setText("*");
        jLabel28.setToolTipText("Field necessary to fill.");
        getContentPane().add(jLabel28);
        jLabel28.setBounds(900, 300, 6, 14);

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/newf.JPG"))); // NOI18N
        getContentPane().add(jLabel29);
        jLabel29.setBounds(0, 0, 1370, 750);

        jMenu8.setText("      File      ");
        jMenu8.setIconTextGap(10);

        jMenuItem22.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/new.JPG"))); // NOI18N
        jMenuItem22.setText("New Form");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem22);

        jMenuItem20.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/mini.PNG"))); // NOI18N
        jMenuItem20.setText("Minimise");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem20);

        jMenuItem23.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/LogOff.PNG"))); // NOI18N
        jMenuItem23.setText("Log Off");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem23);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/TurnOff.PNG"))); // NOI18N
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem3);

        jMenuBar4.add(jMenu8);

        jMenu3.setText("      Staff      ");
        jMenu3.setIconTextGap(10);

        jMenuItem17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/add.PNG"))); // NOI18N
        jMenuItem17.setText("Add");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem17);

        jMenuItem14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/search.PNG"))); // NOI18N
        jMenuItem14.setText("Search");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem14);

        jMenuBar4.add(jMenu3);

        jMenu5.setText("      Patient      ");
        jMenu5.setIconTextGap(10);

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/search.PNG"))); // NOI18N
        jMenuItem6.setText("Search");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem6);

        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/bill.PNG"))); // NOI18N
        jMenuItem10.setText("Billing");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem10);

        jMenuBar4.add(jMenu5);

        jMenu6.setText("      Doctor      ");
        jMenu6.setIconTextGap(10);

        jMenuItem18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/add.PNG"))); // NOI18N
        jMenuItem18.setText("Add");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem18);

        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/search.PNG"))); // NOI18N
        jMenuItem8.setText("Search");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem8);

        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/appoint.PNG"))); // NOI18N
        jMenuItem11.setText("Appointments");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem11);

        jMenuBar4.add(jMenu6);

        jMenu9.setText("      Help      ");
        jMenu9.setIconTextGap(10);

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/aboutus.JPG"))); // NOI18N
        jMenuItem1.setText("About Us");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem1);

        jMenuItem19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/map.PNG"))); // NOI18N
        jMenuItem19.setText("Map");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem19);

        jMenuBar4.add(jMenu9);

        setJMenuBar(jMenuBar4);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
            name=pname.getText();
        try{
            age=Integer.parseInt(page.getText());
        }catch(Exception E1){JOptionPane.showMessageDialog(rootPane, "Type The Age Correctly.");page.setText("");}
            relative=prelative.getText();
            poa=ppoa.getText();
        try{
            phone=Long.parseLong(pphone.getText());
        }catch(Exception E2){JOptionPane.showMessageDialog(rootPane, "Type The Phone No. Correctly.");pphone.setText("");}
            address=paddress.getText();
            problem=pproblem.getText();
            consultant=((String)pconsultant.getSelectedItem()).substring(0,((String)pconsultant.getSelectedItem()).indexOf("-")-1);
            deoa=pdeoa.getText();
            occup=poccup.getText();
            allergi=pallergi.getText();
            if(ch1.isSelected())
                habit=habit+ch1.getText();
            if(ch2.isSelected())
                habit=habit+ch2.getText();
            if(ch3.isSelected())
                habit=habit+ch3.getText();
        try{
            room=Integer.parseInt(((String)proom.getSelectedItem()).substring(10));
            }catch(Exception E3){JOptionPane.showMessageDialog(rootPane, "Choose The Room Correctly.");}
            if(name.isEmpty()||(sex.equals("Female")&&relation.equals("Son of"))||(sex.equals("Male")&&relation.equals("Daughter of"))||(sex.equals("Male")&&relation.equals("Wife of"))||page.getText().isEmpty()||proom.getSelectedItem()=="General Ward"||proom.getSelectedItem()=="Private Ward-A/C"||proom.getSelectedItem()=="Private Ward-Non A/C"||sex.isEmpty()||pphone.getText().length()<10||relative.isEmpty()||relation.isEmpty()||pphone.getText().isEmpty()||pconsultant.getSelectedItem()=="            --------Select--------"||problem.isEmpty())
            {
            JOptionPane.showMessageDialog(rootPane,"Some Columns Are Not Filled Properly.","Fill The Form Correctly.", 2);
            habit="";
            }
            else
            {
                try {
                    Class.forName("java.sql.DriverManager");
                    Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/aionix","root","");
                    Statement stmt=(Statement) con.createStatement();
                    String query1="Select * from Patients;";
                    String query2="Select curdate(),curtime();";
                    ResultSet rs1=stmt.executeQuery(query1);
                    if(rs1.next())
                    {
                        rs1.last();
                        id=rs1.getInt("RegistrationNo")+1;
                    }else{id=1;}
                    ResultSet rs2= stmt.executeQuery(query2);
                    while(rs2.next())
                    {
                    doa=rs2.getDate(1);
                    time1=rs2.getTime(2);
                    }
                if(poa.isEmpty())
                    poa="NULL";
                if(deoa.isEmpty())
                    deoa="NULL";
                if(allergi.isEmpty())
                    allergi="NULL";
                if(habit.isEmpty())
                    habit="NULL";
                String query3="Insert into Patients values('"+name+"',"+age+",'"+sex+"','"+relative+"','"+address+"',"+phone+",'"+consultant+"','"+problem+"','"+doa+"','"+time1+"',NULL,"+ "NULL,'"+poa+"','"+deoa+"','"+allergi+"','"+occup+"','"+habit+"',"+room+","+id+",'"+relation+"',0);";
                stmt.executeUpdate(query3);
                if(room==1)
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+" and bedno="+bed1+";";
                stmt.executeUpdate(query4);
                }
                else if(room==2)
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+" and bedno="+bed2+";";
                stmt.executeUpdate(query4);
                }
                else if(room==3)
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+" and bedno="+bed3+";";
                stmt.executeUpdate(query4);
                }
                else if(room==4)
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+" and bedno="+bed4+";";
                stmt.executeUpdate(query4);
                }
                else
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+";";
                stmt.executeUpdate(query4);
                }
                } catch (Exception ex) {}
                JOptionPane.showMessageDialog(this,"Your id is "+id,"The Entry Has Been Successully Done.",1);
                this.dispose();
                new Patient.NewForm().setVisible(true);
                z=0;
                aa=0;
                bb=0;
                cc=0;
                dd=0;
            }
        }
        else            //search.temp is not equal to 0
        {
            
            name=pname.getText();
        try{
            age=Integer.parseInt(page.getText());
        }catch(Exception E1){JOptionPane.showMessageDialog(rootPane, "Type The Age Correctly.");page.setText("");}
            relative=prelative.getText();
            poa=ppoa.getText();
        try{
            phone=Long.parseLong(pphone.getText());
        }catch(Exception E2){JOptionPane.showMessageDialog(rootPane, "Type The Phone No. Correctly.");pphone.setText("");}
            address=paddress.getText();
            problem=pproblem.getText();
            consultant=((String)pconsultant.getSelectedItem()).substring(0,((String)pconsultant.getSelectedItem()).indexOf("-")-1);
            deoa=pdeoa.getText();
            occup=poccup.getText();
            allergi=pallergi.getText();
            if(ch1.isSelected())
                habit=habit+ch1.getText();
            if(ch2.isSelected())
                habit=habit+ch2.getText();
            if(ch3.isSelected())
                habit=habit+ch3.getText();
        try{
            room=Integer.parseInt(((String)proom.getSelectedItem()).substring(10));
        }catch(Exception E3){JOptionPane.showMessageDialog(rootPane, "Choose The Room Correctly.");}
        if(name.isEmpty()||(sex.equals("Female")&&relation.equals("Son of"))||(sex.equals("Male")&&relation.equals("Daughter of"))||(sex.equals("Male")&&relation.equals("Wife of"))||page.getText().isEmpty()||proom.getSelectedItem()=="General Ward"||proom.getSelectedItem()=="Private Ward-A/C"||proom.getSelectedItem()=="Private Ward-Non A/C"||sex.isEmpty()||pphone.getText().length()>10||pphone.getText().length()<10||page.getText().length()>3||relative.isEmpty()||relation.isEmpty()||pphone.getText().isEmpty()||pconsultant.getSelectedItem()=="            --------Select--------"||problem.isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane,"Some Columns Are Not Filled Properly.","Fill The Form Correctly.", 2);
        }
        else
        {
            try {
                Class.forName("java.sql.DriverManager");
                Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/aionix","root","");
                Statement stmt=(Statement) con.createStatement();
                id=Search.a;
                if(poa.isEmpty())
                    poa="NULL";
                if(deoa.isEmpty())
                    deoa="NULL";
                if(allergi.isEmpty())
                    allergi="NULL";
                if(habit.isEmpty())
                    habit="NULL";
                String query1="Update Patients set Name='"+name+"',Age="+age+",Sex='"+sex+"',RelativeName='"+relative+"',Address='"+address+"',PhoneNo="+phone+",Consultant='"+consultant+"',Problem='"+problem+"',PlaceofAccident='"+poa+"',DetailofAccident='"+deoa+"',Allergies='"+allergi+"',Occupation='"+occup+"',AnyHabit='"+habit+"',RoomNo="+room+",Relation='"+relation+"' where RegistrationNo="+id+";";
                stmt.executeUpdate(query1);
                if(room==1)
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+" and bedno="+bed1+";";
                stmt.executeUpdate(query4);
                }
                else if(room==2)
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+" and bedno="+bed2+";";
                stmt.executeUpdate(query4);
                }
                else if(room==3)
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+" and bedno="+bed3+";";
                stmt.executeUpdate(query4);
                }
                else if(room==4)
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+" and bedno="+bed4+";";
                stmt.executeUpdate(query4);
                }
                else
                {
                    String query4="Update Rooms set Accommodated='Yes' where RoomNo="+room+";";
                stmt.executeUpdate(query4);
                }
            } catch (Exception ex) {}
                JOptionPane.showMessageDialog(this,"The Entry Has Been Successully Done.");
                this.dispose();
                new Patient.NewForm().setVisible(true);
                Search.temp=0;
                z=0;
                aa=0;
                bb=0;
                cc=0;
                dd=0;
        }
        }
    }//GEN-LAST:event_b1ActionPerformed

    private void psex1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psex1ActionPerformed
        // TODO add your handling code here:
        sex="Male";
}//GEN-LAST:event_psex1ActionPerformed

    private void psex2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psex2ActionPerformed
        // TODO add your handling code here:
        sex="Female";
}//GEN-LAST:event_psex2ActionPerformed

    private void r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1ActionPerformed
        // TODO add your handling code here:
        relation="Son of";
    }//GEN-LAST:event_r1ActionPerformed

    private void r2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2ActionPerformed
        // TODO add your handling code here:
        relation="Daughter of";
    }//GEN-LAST:event_r2ActionPerformed

    private void r3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3ActionPerformed
        // TODO add your handling code here:
        relation="Wife of";
    }//GEN-LAST:event_r3ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        if(z==0)
        {
            try {
                Class.forName("java.sql.DriverManager");
                Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/aionix","root","");
                Statement stmt=(Statement) con.createStatement();
                String query1="Select * from Rooms where Accommodated='No' order by RoomNo,BedNo;";
                ResultSet rs1=stmt.executeQuery(query1);
                while(rs1.next())
                {
                    int lt=rs1.getInt("RoomNo");
                    if(rs1.getString("RoomType").equals("General Ward"))
                    {
                        if(aa==0)
                        {
                            proom.addItem("General Ward");
                            aa++;
                        }
                        if(rs1.getInt("RoomNo")==1)
                        {
                            if(aa<=1)
                            {
                                proom.addItem("        --"+lt);
                                bed1=rs1.getInt("BedNo");
                                aa++;
                            }
                        }
                        if(rs1.getInt("RoomNo")==2)
                        {
                            if(aa<=2)
                            {
                                proom.addItem("        --"+lt);
                                bed2=rs1.getInt("BedNo");
                                aa++;
                            }
                        }
                    }
                    else if(rs1.getString("RoomType").equals("Children Ward"))
                    {
                        if(bb==0)
                        {
                            proom.addItem("Children Ward");
                            bb++;
                        }
                        if(rs1.getInt("RoomNo")==3)
                        {
                            if(bb<=1)
                            {
                                proom.addItem("        --"+lt);
                                bed3=rs1.getInt("BedNo");
                                bb++;
                            }
                        }
                        if(rs1.getInt("RoomNo")==4)
                        {
                            if(bb<=2)
                            {
                                proom.addItem("        --"+lt);
                                bed4=rs1.getInt("BedNo");
                                bb++;
                            }
                        }
                    }else if(rs1.getString("RoomType").equals("Private Ward-A/C"))
                    {
                        if(cc==0)
                        {
                            proom.addItem("Private Ward-A/C");
                            cc++;
                        }
                        proom.addItem("        --"+lt);
                    }
                    else if(rs1.getString("RoomType").equals("Private Ward-Non A/C"))
                    {
                        if(dd==0)
                        {
                            proom.addItem("Private Ward-Non A/C");
                            dd++;
                        }
                        proom.addItem("        --"+lt);
                    }
                }
                String query2="Select * from Doctors order by Speciality;";
                ResultSet rs2=stmt.executeQuery(query2);
                while(rs2.next())
                {
                    consultemp1=rs2.getString("Name");
                    consultemp2=rs2.getString("Speciality");
                    pconsultant.addItem(consultemp1+" --"+consultemp2);
                }
                z++;
                if(Search.temp==1)
                {
                    int i=0;
                    int conscount=pconsultant.getItemCount();
                    while(i<conscount)
                    {
                        String ad=(String)pconsultant.getItemAt(i);
                        if(ad.contains(Search.consultant))
                            pconsultant.setSelectedIndex(i);
                        i++;
                    }
                    int j=0;
                    int roomcount=proom.getItemCount();
                    while(j<roomcount)
                    {
                        String ab=(String)proom.getItemAt(j);
                        if(ab.equals("        --"+Search.room))
                            proom.setSelectedIndex(j);
                        j++;
                    }
                    try{
                    String query="Select * from Patients where RegistrationNo="+Search.a+";";
                    ResultSet rs=stmt.executeQuery(query);
                    while(rs.next())
                    {
                    pname.setText(rs.getString("Name"));
                    page.setText(rs.getString("Age"));
                    pphone.setText(rs.getString("PhoneNo"));
                    prelative.setText(rs.getString("RelativeName"));
                    poccup.setText(rs.getString("Occupation"));
                    paddress.setText(rs.getString("Address"));
                    pproblem.setText(rs.getString("Problem"));
                    ppoa.setText(rs.getString("PlaceofAccident"));
                    pdeoa.setText(rs.getString("DetailofAccident"));
                    pallergi.setText(rs.getString("Allergies"));
                    id=rs.getInt("RegistrationNo");
                    relation=rs.getString("Relation");
                    if(relation.equals("Son of"))
                    r1.setSelected(true);
                    else if(relation.equals("Daughter of"))
                    r2.setSelected(true);
                    else if(relation.equals("Wife of"))
                    r3.setSelected(true);
                    sex=rs.getString("Sex");
                    if(sex.equals("Male"))
                    psex1.setSelected(true);
                    else if(sex.equals("Female"))
                    psex2.setSelected(true);
                    habit=rs.getString("AnyHabit");
                    if(habit.contains("Alcohol") && habit.contains("Smoking") && habit.contains("Tabacco Chewing"))
                    {   
                        ch1.setSelected(true);
                        ch2.setSelected(true);
                        ch3.setSelected(true);
                    }
                    else if(habit.contains("Alcohol") && habit.contains("Smoking"))
                    {
                        ch1.setSelected(true);
                        ch2.setSelected(true);
                    }
                    else if(habit.contains("Smoking") && habit.contains("Tabacco Chewing"))
                    {
                        ch2.setSelected(true);
                        ch3.setSelected(true);
                    }
                    else if(habit.contains("Alcohol") && habit.contains("Tabacco Chewing"))
                    {
                        ch1.setSelected(true);
                        ch3.setSelected(true);
                    }
                    else if(habit.contains("Alcohol"))
                    {
                        ch1.setSelected(true);
                    }
                    else if(habit.contains("Smoking"))
                    {
                        ch2.setSelected(true);
                    }
                    else if(habit.contains("Tabacco Chewing"))
                    {
                        ch3.setSelected(true);
                    }
                    habit="";
                    }
                    }catch(Exception E){}
                }
        }catch(Exception Ex){}
        }
    }//GEN-LAST:event_formWindowActivated

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Patient.NewForm().setVisible(true);
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        // TODO add your handling code here:
        this.setExtendedState(1);
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Default.Login().setVisible(true);
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
            int exit=(int)JOptionPane.showConfirmDialog(rootPane, "Do you want to exit?", "Hospital Management System", 0);
            if(exit==0)
            System.exit(0);
        }
        else
            JOptionPane.showConfirmDialog(rootPane, "Press SUBMIT then exit.", "You can't exit", 0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
        this.dispose();
        new Staff.Add().setVisible(true);
        }
        else
            JOptionPane.showConfirmDialog(rootPane, "Press SUBMIT to move to another frame.", "You can't change the frame.", 0);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
        this.dispose();
        new Staff.Details().setVisible(true);
        }
        else
            JOptionPane.showConfirmDialog(rootPane, "Press SUBMIT to move to another frame.", "You can't change the frame.", 0);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
        this.dispose();
        new Patient.Search().setVisible(true);
        }
        else
            JOptionPane.showConfirmDialog(rootPane, "Press SUBMIT to move to another frame.", "You can't change the frame.", 0);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
        this.dispose();
        new Patient.Billing().setVisible(true);
        }
        else
            JOptionPane.showConfirmDialog(rootPane, "Press SUBMIT to move to another frame.", "You can't change the frame.", 0);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
        this.dispose();
        new Doctor.Add().setVisible(true);
        }
        else
            JOptionPane.showConfirmDialog(rootPane, "Press SUBMIT to move to another frame.", "You can't change the frame.", 0);
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
        this.dispose();
        new Doctor.Search().setVisible(true);
        }
        else
            JOptionPane.showConfirmDialog(rootPane, "Press SUBMIT to move to another frame.", "You can't change the frame.", 0);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
        this.dispose();
        new Doctor.Appointments().setVisible(true);
        }
        else
            JOptionPane.showConfirmDialog(rootPane, "Press SUBMIT to move to another frame.", "You can't change the frame.", 0);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new Help.AboutUs().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        // TODO add your handling code here:
        new Help.Map().setVisible(true);
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(Search.temp==0)
        {
        this.dispose();
        new Default.Home().setVisible(true);
        }
        else
            JOptionPane.showConfirmDialog(rootPane, "Press SUBMIT to move to another frame.", "You can't change the frame.", 0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pageKeyReleased
        // TODO add your handling code here:
        if(page.getText().length()>3)
        {
        JOptionPane.showMessageDialog(rootPane,"Age can't be greater than 3 digits.");
        page.setText("");
        }
        else if(page.getText().equals("0"))
        {
        JOptionPane.showMessageDialog(rootPane,"Age can't be 0");
        page.setText("");
        }
    }//GEN-LAST:event_pageKeyReleased

    private void pphoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pphoneKeyReleased
        // TODO add your handling code here:
        if(pphone.getText().length()>10)
        {
        JOptionPane.showMessageDialog(rootPane,"Phone No. can't be greater than 10 digits.");
        pphone.setText("");
        }
        else if(pphone.getText().equals("0"))
        {
        JOptionPane.showMessageDialog(rootPane,"Phone No. can't be 0");
        pphone.setText("");
        }
    }//GEN-LAST:event_pphoneKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox ch1;
    private javax.swing.JCheckBox ch2;
    private javax.swing.JCheckBox ch3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField paddress;
    private javax.swing.JTextField page;
    private javax.swing.JTextField pallergi;
    private javax.swing.JComboBox pconsultant;
    private javax.swing.JTextArea pdeoa;
    private javax.swing.JTextField pdoa;
    private javax.swing.JTextField pdod;
    private javax.swing.JTextField pname;
    private javax.swing.JTextField poccup;
    private javax.swing.JTextField pphone;
    private javax.swing.JTextField ppoa;
    private javax.swing.JTextArea pproblem;
    private javax.swing.JTextField prelative;
    private javax.swing.JComboBox proom;
    private javax.swing.JRadioButton psex1;
    private javax.swing.JRadioButton psex2;
    private javax.swing.JTextField ptime1;
    private javax.swing.JTextField ptime2;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    private javax.swing.JRadioButton r3;
    // End of variables declaration//GEN-END:variables
}
